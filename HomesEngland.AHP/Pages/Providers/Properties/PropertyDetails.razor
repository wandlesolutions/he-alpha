@page "/providers/byid/{ProviderId:guid}/properties/byid/{PropertyId:guid}"
@using HomesEngland.AHP.Data;
@inject IGrantRepository repo

<PageTitle>@PageTitle</PageTitle>

@if (Property != null)
{
    <Caption CaptionSize="CaptionSize.Large">@Property.PropertyName</Caption>
}

<PageHeading>Property details</PageHeading>

@if (Property != null)
{
    <DataList>
        <DataRow>
            <DataTerm>Address</DataTerm>
            <DataDefinition>
                @Property.Address1
                <br />
                @Property.Address2
                <br />
                @Property.Postcode
               </DataDefinition>
        </DataRow>


        <DataRow>
            <DataTerm>Grant amount:</DataTerm>
            <DataDefinition>
                @if (Property.GrantAmount.HasValue)
                {
                    <Currency Amount="@Property.GrantAmount"></Currency>
                }
                else
                {
                    <span class="govuk-hint">None assigned</span>
                }
            </DataDefinition>
        </DataRow>

        <DataRow>
            <DataTerm>Revenue funding amount:</DataTerm>
            <DataDefinition>

                @if (Property.ExpensesAmount.HasValue)
                {
                    <Currency Amount="@Property.ExpensesAmount"></Currency>
                }
                else
                {
                    <span class="govuk-hint">None assigned</span>
                }
            </DataDefinition>
        </DataRow>

        <DataRow>
            <DataTerm>Total funding:</DataTerm>
            <DataDefinition>

                @if (Property.TotalAmount.HasValue)
                {
                    <Currency Amount="@Property.TotalAmount"></Currency>
                }
                else
                {
                    <span class="govuk-hint">None assigned</span>
                }
            </DataDefinition>
        </DataRow>
    </DataList>
}
else
{
    <Inset>Property does not exist for this provider</Inset>
}

@code {

    private Provider? Provider { get; set; }

    private IEnumerable<GrantMilestone>? GrantMilestones { get; set; }

    [Parameter]
    public Guid ProviderId { get; set; }

    [Parameter]
    public Guid PropertyId { get; set; }

    private Property? Property { get; set; }

    public string PageTitle { get; set; } = "Property details";

    protected override async Task OnInitializedAsync()
    {
        Provider = await repo.GetProvider(ProviderId);
        Property = await repo.GetPropertyForProvider(PropertyId, ProviderId);

        if (Provider != null && Property != null)
        {
            PageTitle = $"{Property.PropertyName} - Property details";
        } 
    }

    [CascadingParameter]
    public MainLayout? MainLayout { get; set; }

    protected override void OnParametersSet()
    {
        MainLayout?.SetBreadcrumbs(
                   BreadcrumbItem.ProviderBase()
                   .AddProvider(Provider)
                   .AddProperties(Provider));
    }
}
