<EditForm OnSubmit="OnSubmit" EditContext="EditContext">
 
    @if (ShowValidationDiv)
    {



        <div class="govuk-error-summary" data-module="govuk-error-summary">

            <div role="alert">
                <h2 class="govuk-error-summary__title">
                    There is a problem
                </h2>
                <div class="govuk-error-summary__body">
                    @* <ul class="govuk-list govuk-error-summary__list">
        <li>
          <a href="#passport-issued-day">The date your passport was issued must be in the past</a>
        </li>
        <li>
          <a href="#postcode-input">Enter a postcode, like AA1 1AA</a>
        </li>
      </ul>*@

                    <ValidationSummary AdditionalAttributes="@ValidationSummaryAttributes">

                    </ValidationSummary>
                </div>
            </div>
        </div>
    }
    
    <fieldset class="govuk-fieldset">
        @if (!string.IsNullOrWhiteSpace(Heading))
        {
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                <h1 class="govuk-fieldset__heading">
                    @Heading
                </h1>
            </legend>
        }

        @ChildContent
        
    </fieldset>
</EditForm>
@code {
    [Parameter]
    public string? Heading { get; set; }

    [Parameter]
    public EditContext EditContext { get; set; }

    [Parameter]
    public EventCallback<EditContext> OnSubmit { get; set; }

    [Parameter, EditorRequired]
    public RenderFragment ChildContent { get; set; }

    private bool ShowValidationDiv { get; set; } = false;

    private static readonly Dictionary<string, object> ValidationSummaryAttributes = new Dictionary<string, object>
    {
        {"class", "govuk-list govuk-error-summary__list"},
    };

    protected override void OnParametersSet()
    {
        if(EditContext == null){
            ShowValidationDiv = false;
            return;
        }

        ShowValidationDiv = EditContext.GetValidationMessages().Any();
    }
}
